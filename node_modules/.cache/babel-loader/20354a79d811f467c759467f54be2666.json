{"ast":null,"code":"var _jsxFileName = \"/Users/kimhyeonsu/firebase-tutorial/src/components/SignIn/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"SignIn\"), React.createElement(SignInForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}), React.createElement(SignUpLink, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}), React.createElement(PasswordForgetLink, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        email,\n        password\n      } = this.state;\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n        this.setState({ ...INITIAL_STATE\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      error\n    } = this.state;\n    const isInvalid = password === '' || email === '';\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      value: password,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Sign In\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\nexport default SignInPage;\nexport { SignInForm };","map":{"version":3,"sources":["/Users/kimhyeonsu/firebase-tutorial/src/components/SignIn/index.js"],"names":["React","Component","withRouter","compose","SignUpLink","withFirebase","ROUTES","SignInPage","INITIAL_STATE","email","password","error","SignInFormBase","constructor","props","onSubmit","event","state","firebase","doSignInWithEmailAndPassword","then","setState","history","push","HOME","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","SignInForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignUpLink />\n    <PasswordForgetLink />\n  </div>\n);\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { email, password } = this.state;\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\nexport default SignInPage;\nexport { SignInForm };"]},"metadata":{},"sourceType":"module"}