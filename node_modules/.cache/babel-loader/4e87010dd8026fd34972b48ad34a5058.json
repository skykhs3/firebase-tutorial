{"ast":null,"code":"var _jsxFileName = \"/Users/kimhyeonsu/firebase-tutorial/src/components/Admin/index.js\";\nimport React, { Component } from 'react';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('AdminPage did mount');\n    var val2 = 1234;\n    const val = this.props.firebase.db.ref('/test').once('value').then(snapshot => {\n      val2 = snapshot.val();\n    });\n    this.props.firebase.db.ref('/test').once('value').then(snapshot => console.log('::' + snapshot.val()));\n    console.log(val);\n    console.log(val2);\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      if (usersObject == null) {\n        const usersList = [];\n        this.setState({\n          users: usersList,\n          loading: false\n        });\n      } else {\n        const usersList = Object.keys(usersObject).map(key => ({ ...usersObject[key],\n          uid: key\n        }));\n        this.setState({\n          users: usersList,\n          loading: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    console.log('AdminPage will unmount');\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const {\n      users,\n      loading\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Admin\"), loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Loading ...\"), React.createElement(UserList, {\n      users: users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst UserList = ({\n  users\n}) => {\n  if (users == null) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"df\");else {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, users.map(user => React.createElement(\"li\", {\n      key: user.uid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Username:\"), \" \", user.username), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"E-Mail:\"), \" \", user.email), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" ID:\"), \" \", user.uid))));\n  }\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withFirebase(AdminPage);","map":{"version":3,"sources":["/Users/kimhyeonsu/firebase-tutorial/src/components/Admin/index.js"],"names":["React","Component","AuthUserContext","withAuthorization","withFirebase","AdminPage","constructor","props","state","loading","users","componentDidMount","console","log","val2","val","firebase","db","ref","once","then","snapshot","setState","on","usersObject","usersList","Object","keys","map","key","uid","componentWillUnmount","off","render","UserList","user","username","email","condition","authUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n  componentDidMount() {\n    console.log('AdminPage did mount');\n\n    var val2 = 1234;\n\n    const val = this.props.firebase.db.ref('/test').once('value').then((snapshot) => { val2 = snapshot.val() });\n    this.props.firebase.db.ref('/test').once('value').then((snapshot) => (console.log('::' + snapshot.val())));\n\n    console.log(val);\n    console.log(val2);\n\n    this.setState({ loading: true });\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n      if (usersObject == null) {\n        const usersList = [];\n        this.setState({\n          users: usersList,\n          loading: false,\n        });\n      }\n      else {\n        const usersList = Object.keys(usersObject).map(key => ({\n          ...usersObject[key],\n          uid: key,\n        }));\n        this.setState({\n          users: usersList,\n          loading: false,\n        });\n      }\n      \n    });\n  }\n  componentWillUnmount() {\n    console.log('AdminPage will unmount');\n    this.props.firebase.users().off();\n  }\n  render() {\n    const { users, loading } = this.state;\n    return (\n      <div>\n        <h1>Admin</h1>\n        {loading && <div>Loading ...</div>}\n        <UserList users={users} />\n      </div>\n    );\n  }\n}\nconst UserList = ({ users }) => {\n  if (users == null)\n    return (<div>df</div>);\n  else {\n    return (\n      <ul>\n        {users.map(user => (\n          <li key={user.uid}>\n            <p>\n              <strong>Username:</strong> {user.username}\n            </p>\n            <p>\n              <strong>E-Mail:</strong> {user.email}\n            </p>\n            <p>\n              <strong> ID:</strong> {user.uid}\n            </p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\nconst condition = authUser => !!authUser;\nexport default withFirebase(AdminPage);"]},"metadata":{},"sourceType":"module"}