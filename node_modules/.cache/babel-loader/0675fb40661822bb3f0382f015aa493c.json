{"ast":null,"code":"var _jsxFileName = \"/Users/kimhyeonsu/firebase-tutorial/src/components/Admin/index.js\";\nimport React, { Component } from 'react';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('AdminPage did mount');\n    this.setState({\n      loading: true\n    });\n    var ref = this.props.firebase.db.ref(\"user/XW4LpKHZY3bWyVaS4VHpr0qxJaj2\");\n    ref.on(\"value\", function (snapshot) {\n      console.log(snapshot.val().username);\n    }, function (errorObject) {\n      console.log(\"The read failed: \" + errorObject.code);\n    });\n    console.log('did');\n    this.props.firebase.users().on(\"value\", snapshot => {\n      console.log(snapshot.val());\n      console.log('user');\n      const usersObject = snapshot.val();\n      const usersList = Object.keys(usersObject).map(key => ({ ...usersObject[key],\n        uid: key\n      }));\n      this.setState({\n        users: usersList,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    console.log('AdminPage will unmount');\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const {\n      users,\n      loading\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Admin\"), loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Loading ...\"), React.createElement(UserList, {\n      users: users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst UserList = ({\n  users\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, users.map(user => React.createElement(\"li\", {\n  key: user.uid,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"ID:\"), \" \", user.uid), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, \"E-Mail:\"), \" \", user.email), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, \"Username:\"), \" \", user.username))));\n\nconst condition = authUser => !!authUser;\n\nexport default withFirebase(AdminPage);","map":{"version":3,"sources":["/Users/kimhyeonsu/firebase-tutorial/src/components/Admin/index.js"],"names":["React","Component","AuthUserContext","withAuthorization","AdminPage","constructor","props","state","loading","users","componentDidMount","console","log","setState","ref","firebase","db","on","snapshot","val","username","errorObject","code","usersObject","usersList","Object","keys","map","key","uid","componentWillUnmount","off","render","UserList","user","email","condition","authUser","withFirebase"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { AuthUserContext, withAuthorization } from '../Session';\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n  componentDidMount() {\n    console.log('AdminPage did mount');\n    this.setState({ loading: true });\n\n\n    var ref = this.props.firebase.db.ref(\"user/XW4LpKHZY3bWyVaS4VHpr0qxJaj2\");\nref.on(\"value\", function(snapshot) {\n  console.log(snapshot.val().username);\n\n}, function (errorObject) {\n  console.log(\"The read failed: \" + errorObject.code);\n});\n\n\nconsole.log('did');\n    this.props.firebase.users().on(\"value\", snapshot => {\n      console.log(snapshot.val());\n      console.log('user');\n      const usersObject = snapshot.val();\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n  componentWillUnmount() {\n    console.log('AdminPage will unmount');\n    this.props.firebase.users().off();\n  }\n  render() {\n    const { users, loading } = this.state;\n    return (\n      <div>\n        <h1>Admin</h1>\n        {loading && <div>Loading ...</div>}\n        <UserList users={users} />\n      </div>\n    );\n  }\n}\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map(user => (\n      <li key={user.uid}>\n        <span>\n          <strong>ID:</strong> {user.uid}\n        </span>\n        <span>\n          <strong>E-Mail:</strong> {user.email}\n        </span>\n        <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n      </li>\n    ))}\n  </ul>\n);\nconst condition = authUser => !!authUser;\nexport default withFirebase(AdminPage);"]},"metadata":{},"sourceType":"module"}